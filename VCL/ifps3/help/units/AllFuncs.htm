<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>
<HEAD>
<META name="GENERATOR" content="rjPasDoc 0.7">
<TITLE>All Functions and Procedures</TITLE>
<LINK rel="StyleSheet" href="Help.css">
</HEAD>
<BODY bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#800080" alink="#FF0000">
<TABLE cellspacing=2 cellpadding=4 width=100%>
<TR bgcolor="e0e0e0">
<TD><A href="AllUnits.htm"><CENTER>Units</CENTER></A></TD>
<TD><A href="AllClass.htm"><CENTER>Classes, Interfaces, Objects</CENTER></A></TD>
<TD><A href="AllTypes.htm"><CENTER>Types</CENTER></A></TD>
<TD><A href="AllVaria.htm"><CENTER>Variables</CENTER></A></TD>
<TD><A href="AllConst.htm"><CENTER>Constants</CENTER></A></TD>
<TD><A href="AllFuncs.htm"><CENTER>Functions, Procedures</CENTER></A></TD>
<TD><A href="AllIdent.htm"><CENTER>Identifiers</CENTER></A></TD>
</TR>
</TABLE>
<H1>All Functions and Procedures</H1>
<TABLE cellspacing=2 cellpadding=4 width=100%>
<TR bgcolor="#e0e0e0"><TH>Name</TH><TH>Unit</TH><TH>Description</TH></TR> 
<TR bgcolor=#efefef valign=top><TD><A href="ifpiclass.htm#11">AddImportedClassVariable</A></TD>
<TD><A href="ifpiclass.htm">ifpiclass</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpiclassruntime.htm#26">ClassRuntimeGetRPFuncs</A></TD>
<TD><A href="ifpiclassruntime.htm">ifpiclassruntime</A></TD>
<TD>Return the RPFuncs for other libraries</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#93">CreateVariant</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Create a variant</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#94">DisposeVariant</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Decrease the variant's refcount and free it if it's 0</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpidll2.htm#55">DllExternalProc</A></TD>
<TD><A href="ifpidll2.htm">ifpidll2</A></TD>
<TD>Assign this to the TIFPSCompiler.OnExternal event</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#287">FastLowerCase</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Fast uppercase</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#288">FastUpperCase</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Fast uppercase</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#289">FloatToStr</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Convert a float to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#95">FreePIFVariantList</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Free a list of variants and also the list</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#290">Fw</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Return the first word of a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#96">GetIFPSArrayLength</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Get the length of a variant array</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#97">GetInt</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Get the value of a variant (as Longint)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#98">GetReal</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Get the value of a variant (as Extended)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#99">GetString</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Get the value of a variant (as String)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#100">GetUInt</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Get the value of a variant (as Cardinal/Longword)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#291">GRFW</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Get the first word and remove it</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#382">IFPSMessageToString</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Convert a message to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#101">IFPSVariantToString</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Convert a variant to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpicall.htm#8">InnerfuseCall</A></TD>
<TD><A href="ifpicall.htm">ifpicall</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#292">IntToStr</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Integer to string conversion</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#102">LGetInt</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Get the value of an Integer variant in a list</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#103">LGetReal</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Get the value of a real variant in a list</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#104">LGetStr</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Get the value of a string variant in a list</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#105">LGetUInt</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Get the value of an unsigned integer variant in a list</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#106">LSetInt</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Set the value of an Integer variant in a list</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#107">LSetReal</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Set the value of a real variant in a list</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#108">LSetStr</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Set the value of a string variant in a list</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#109">LSetUInt</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Set the value of an unsigned integer variant in a list</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3common.htm#244">MakeHash</A></TD>
<TD><A href="ifps3common.htm">ifps3common</A></TD>
<TD>Make a hash of a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3optm.htm#279">OptimizeScript</A></TD>
<TD><A href="ifps3optm.htm">ifps3optm</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpidll2runtime.htm#57">ProcessDllImport</A></TD>
<TD><A href="ifpidll2runtime.htm">ifpidll2runtime</A></TD>
<TD>Process a dll import (no need to call this function)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpiclassruntime.htm#27">RegisterClassLibaryRuntime</A></TD>
<TD><A href="ifpiclassruntime.htm">ifpiclassruntime</A></TD>
<TD>Register the classes at runtime</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpidelphi.htm#47">RegisterDelphiFunctionC</A></TD>
<TD><A href="ifpidelphi.htm">ifpidelphi</A></TD>
<TD>Register a normal Delphi function at runtime. Decl should be the exact declaration of the function. But since the const keyword is not support yet, you should leave that out.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpidelphiruntime.htm#51">RegisterDelphiFunctionR</A></TD>
<TD><A href="ifpidelphiruntime.htm">ifpidelphiruntime</A></TD>
<TD>Register a delphi function</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpidll2runtime.htm#58">RegisterDLLRuntime</A></TD>
<TD><A href="ifpidll2runtime.htm">ifpidll2runtime</A></TD>
<TD>Register the dll runtime library</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3lib_std.htm#275">RegisterStandardLibrary_C</A></TD>
<TD><A href="ifps3lib_std.htm">ifps3lib_std</A></TD>
<TD>In your Compilers OnUses proc: RegisterStandardLibrary_C registers the standard library. function floattostr(e: extended): string; function inttostr(i: Longint): string; function strtoint(s: string): Longint; function strtointdef(s: string; def: Longint): Longint; function copy(s: string; ifrom, icount: Longint): string; function pos(substr, s: string): Longint; procedure delete(var s: string; ifrom, icount: Longint): string; procedure insert(s: string; var s2: string; ipos: Longint): string; function getarraylength(var v: array): Integer; procedure setarraylength(var v: array; i: Integer); Function StrGet(var S : String; I : Integer) : Char; procedure StrSet(c : Char; I : Integer; var s : String); Function Uppercase(s : string) : string; Function Lowercase(s : string) : string; Function Trim(s : string) : string; Function Length(s : String) : Longint; procedure SetLength(var S: String; L: Longint); Function Sin(e : Extended) : Extended; Function Cos(e : Extended) : Extended; Function Sqrt(e : Extended) : Extended; Function Round(e : Extended) : Longint; Function Trunc(e : Extended) : Longint; Function Int(e : Extended) : Longint; Function Pi : Extended; Function Abs(e : Extended) : Extended; function StrToFloat(s: string): Extended; Function FloatToStr(e : Extended) : String; Function Padl(s : string;I : longInt) : string; Function Padr(s : string;I : longInt) : string; Function Padz(s : string;I : longInt) : string; Function Replicate(c : char;I : longInt) : string; Function StringOfChar(c : char;I : longInt) : string;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3lib_stdr.htm#277">RegisterStandardLibrary_R</A></TD>
<TD><A href="ifps3lib_stdr.htm">ifps3lib_stdr</A></TD>
<TD>This function registers all standard functions. Call this function before loading your script into the executer.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#110">SetIFPSArrayLength</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Set the length of a variant array</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#383">SetVarExportName</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Set the name of an exported variable</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpiclassruntime.htm#28">SetVariantToClass</A></TD>
<TD><A href="ifpiclassruntime.htm">ifpiclassruntime</A></TD>
<TD>Set a runtime variant</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#293">StrToInt</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>String to integer</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#294">StrToIntDef</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>String to integer</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#111">TIFErrorToString</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Convert an error to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#384">TransByteToStr</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Transform a byte to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#385">TransCardinalToStr</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Transform a cardinal to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#386">TransDoubleToStr</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Transform a double to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#387">TransExtendedToStr</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Transform a extended to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#388">TransLongintToStr</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Transform a longint to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#389">TransShortIntToStr</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Transform a shortint to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#390">TransSingleToStr</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Transform a single to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#391">TransSmallIntToStr</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Transform a smallint to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#392">TransWordToStr</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Transform a word to a string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#112">VGetFloat</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#113">VGetInt</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#114">VGetInt64</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#115">VGetString</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#116">VSetFloat</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#117">VSetInt</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#118">VSetInt64</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#119">VSetString</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>&nbsp;</TD>
</TR>
</TABLE>
<HR noshade size=1><EM>Generated by <A href="http://www.zeitungsjunge.de/delphi/">rjPasDoc 0.7</A> on Wed 15 May 2002 19:21:35</EM>
</BODY>
</HTML>
